{"ast":null,"code":"import _asyncToGenerator from\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/ellika/Web3/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useMemo,useState}from\"react\";import{ethers}from\"ethers\";import{useWeb3}from\"@3rdweb/hooks\";import{ThirdwebSDK}from\"@3rdweb/sdk\";import{UnsupportedChainIdError}from\"@web3-react/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var sdk=new ThirdwebSDK(\"rinkeby\");var bundleDropModule=sdk.getBundleDropModule(\"0xA147969A02B7Ab46364E8399aeb3396Ad0a6134a\");var tokenModule=sdk.getTokenModule(\"0x3418AA364aAddbFF91Ed0d74D415C4c4D2Fe6324\");var voteModule=sdk.getVoteModule(\"0x449bABD357d84a7Fe3FFe3D6182f9439BdeCbd6A\");var App=function App(){var _useWeb=useWeb3(),connectWallet=_useWeb.connectWallet,address=_useWeb.address,error=_useWeb.error,provider=_useWeb.provider;console.log(\"👋 Address:\",address);// The signer is required to sign transactions on the blockchain.\n// Without it we can only read data, not write.\nvar signer=provider?provider.getSigner():undefined;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasClaimedNFT=_useState2[0],setHasClaimedNFT=_useState2[1];// isClaiming lets us easily keep a loading state while the NFT is minting.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isClaiming=_useState4[0],setIsClaiming=_useState4[1];// Holds the amount of token each member has in state.\nvar _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),memberTokenAmounts=_useState6[0],setMemberTokenAmounts=_useState6[1];// The array holding all of our members addresses.\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),memberAddresses=_useState8[0],setMemberAddresses=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),proposals=_useState10[0],setProposals=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isVoting=_useState12[0],setIsVoting=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),hasVoted=_useState14[0],setHasVoted=_useState14[1];// A fancy function to shorten someones wallet address, no need to show the whole thing. \nvar shortenAddress=function shortenAddress(str){return str.substring(0,6)+\"...\"+str.substring(str.length-4);};// This useEffect grabs all the addresses of our members holding our NFT.\nuseEffect(function(){if(!hasClaimedNFT){return;}// Just like we did in the 7-airdrop-token.js file! Grab the users who hold our NFT\n// with tokenId 0.\nbundleDropModule.getAllClaimerAddresses(\"0\").then(function(addresses){console.log(\"🚀 Members addresses\",addresses);setMemberAddresses(addresses);}).catch(function(err){console.error(\"failed to get member list\",err);});},[hasClaimedNFT]);// This useEffect grabs the # of token each member holds.\nuseEffect(function(){if(!hasClaimedNFT){return;}// Grab all the balances.\ntokenModule.getAllHolderBalances().then(function(amounts){console.log(\"👜 Amounts\",amounts);setMemberTokenAmounts(amounts);}).catch(function(err){console.error(\"failed to get token amounts\",err);});},[hasClaimedNFT]);// Now, we combine the memberAddresses and memberTokenAmounts into a single array\nvar memberList=useMemo(function(){return memberAddresses.map(function(address){return{address:address,tokenAmount:ethers.utils.formatUnits(// If the address isn't in memberTokenAmounts, it means they don't\n// hold any of our token.\nmemberTokenAmounts[address]||0,18)};});},[memberAddresses,memberTokenAmounts]);// Another useEffect!\nuseEffect(function(){// We pass the signer to the sdk, which enables us to interact with\n// our deployed contract!\nsdk.setProviderOrSigner(signer);},[signer]);useEffect(function(){if(!address){return;}return bundleDropModule.balanceOf(address,\"0\").then(function(balance){if(balance.gt(0)){setHasClaimedNFT(true);console.log(\"🌟 this user has a membership NFT!\");}else{setHasClaimedNFT(false);console.log(\"😭 this user doesn't have a membership NFT.\");}}).catch(function(error){setHasClaimedNFT(false);console.error(\"failed to nft balance\",error);});},[address]);if(error instanceof UnsupportedChainIdError){return/*#__PURE__*/_jsxs(\"div\",{className:\"unsupported-network\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Please connect to Rinkeby\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This dapp only works on the Rinkeby network, please switch networks in your connected wallet.\"})]});}//case 1 when metamask not connected\nif(!address){return/*#__PURE__*/_jsxs(\"div\",{className:\"landing\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Chai Ki Tapri DAO\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return connectWallet(\"injected\");},className:\"btn-hero\",children:\"Connect your wallet\"})]});}//if connected wallet, minted nft for joining dao, show membership page. Case 3, show list of all holders\nif(hasClaimedNFT){return/*#__PURE__*/_jsxs(\"div\",{className:\"member-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDF6AChai Ki Tapri Members Page\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Congratulations on being a member\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Member List\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Token Amount\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:memberList.map(function(member){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:shortenAddress(member.address)}),/*#__PURE__*/_jsx(\"td\",{children:member.tokenAmount})]},member.address);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Active Proposals\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var votes,delegation;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();e.stopPropagation();//before we do async things, we want to disable the button to prevent double clicks\nsetIsVoting(true);// lets get the votes from the form for the values\nvotes=proposals.map(function(proposal){var voteResult={proposalId:proposal.proposalId,//abstain by default\nvote:2};proposal.votes.forEach(function(vote){var elem=document.getElementById(proposal.proposalId+\"-\"+vote.type);if(elem.checked){voteResult.vote=vote.type;return;}});return voteResult;});// first we need to make sure the user delegates their token to vote\n_context3.prev=4;_context3.next=7;return tokenModule.getDelegationOf(address);case 7:delegation=_context3.sent;if(!(delegation===ethers.constants.AddressZero)){_context3.next=11;break;}_context3.next=11;return tokenModule.delegateTo(address);case 11:_context3.prev=11;_context3.next=14;return Promise.all(votes.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(vote){var proposal;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return voteModule.get(vote.proposalId);case 2:proposal=_context.sent;if(!(proposal.state===1)){_context.next=5;break;}return _context.abrupt(\"return\",voteModule.vote(vote.proposalId,vote.vote));case 5:return _context.abrupt(\"return\");case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}()));case 14:_context3.prev=14;_context3.next=17;return Promise.all(votes.map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(vote){var proposal;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return voteModule.get(vote.proposalId);case 2:proposal=_context2.sent;if(!(proposal.state===4)){_context2.next=5;break;}return _context2.abrupt(\"return\",voteModule.execute(vote.proposalId));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref3.apply(this,arguments);};}()));case 17:// if we get here that means we successfully voted, so let's set the \"hasVoted\" state to true\nsetHasVoted(true);// and log out a success message\nconsole.log(\"successfully voted\");_context3.next=24;break;case 21:_context3.prev=21;_context3.t0=_context3[\"catch\"](14);console.error(\"failed to execute votes\",_context3.t0);case 24:_context3.next=29;break;case 26:_context3.prev=26;_context3.t1=_context3[\"catch\"](11);console.error(\"failed to vote\",_context3.t1);case 29:_context3.next=34;break;case 31:_context3.prev=31;_context3.t2=_context3[\"catch\"](4);console.error(\"failed to delegate tokens\");case 34:_context3.prev=34;// in *either* case we need to set the isVoting state to false to enable the button again\nsetIsVoting(false);return _context3.finish(34);case 37:case\"end\":return _context3.stop();}}},_callee3,null,[[4,31,34,37],[11,26],[14,21]]);}));return function(_x){return _ref.apply(this,arguments);};}(),children:[proposals.map(function(proposal,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h5\",{children:proposal.description}),/*#__PURE__*/_jsx(\"div\",{children:proposal.votes.map(function(vote){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:proposal.proposalId+\"-\"+vote.type,name:proposal.proposalId,value:vote.type//default the \"abstain\" vote to chedked\n,defaultChecked:vote.type===2}),/*#__PURE__*/_jsx(\"label\",{htmlFor:proposal.proposalId+\"-\"+vote.type,children:vote.label})]},vote.type);})})]},proposal.proposalId);}),/*#__PURE__*/_jsx(\"button\",{disabled:isVoting||hasVoted,type:\"submit\",children:isVoting?\"Voting...\":hasVoted?\"You Already Voted\":\"Submit Votes\"}),/*#__PURE__*/_jsx(\"small\",{children:\"This will trigger multiple transactions that you will need to sign.\"})]})]})]})]});};//if not claimed then claim using mintNft\nvar mintNft=function mintNft(){setIsClaiming(true);// Call bundleDropModule.claim(\"0\", 1) to mint nft to user's wallet.\nbundleDropModule.claim(\"0\",1).then(function(){// Set claim state.\nsetHasClaimedNFT(true);// Show user their fancy new NFT!\nconsole.log(\"\\uD83C\\uDF0A Successfully Minted! Check it our on OpenSea: https://testnets.opensea.io/assets/\".concat(bundleDropModule.address.toLowerCase(),\"/0\"));}).catch(function(err){console.error(\"failed to claim\",err);}).finally(function(){// Stop loading state.\nsetIsClaiming(false);});};// Render mint nft screen.\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"mint-nft\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mint your free \\uD83C\\uDF6ADAO Membership NFT\"}),/*#__PURE__*/_jsx(\"button\",{disabled:isClaiming,onClick:function onClick(){return mintNft();},children:isClaiming?\"Minting...\":\"Mint your nft (FREE)\"})]});};export default App;","map":{"version":3,"sources":["/home/ellika/Web3/src/App.jsx"],"names":["useEffect","useMemo","useState","ethers","useWeb3","ThirdwebSDK","UnsupportedChainIdError","sdk","bundleDropModule","getBundleDropModule","tokenModule","getTokenModule","voteModule","getVoteModule","App","connectWallet","address","error","provider","console","log","signer","getSigner","undefined","hasClaimedNFT","setHasClaimedNFT","isClaiming","setIsClaiming","memberTokenAmounts","setMemberTokenAmounts","memberAddresses","setMemberAddresses","proposals","setProposals","isVoting","setIsVoting","hasVoted","setHasVoted","shortenAddress","str","substring","length","getAllClaimerAddresses","then","addresses","catch","err","getAllHolderBalances","amounts","memberList","map","tokenAmount","utils","formatUnits","setProviderOrSigner","balanceOf","balance","gt","member","e","preventDefault","stopPropagation","votes","proposal","voteResult","proposalId","vote","forEach","elem","document","getElementById","type","checked","getDelegationOf","delegation","constants","AddressZero","delegateTo","Promise","all","get","state","execute","index","description","label","mintNft","claim","toLowerCase","finally"],"mappings":"wTAAA,OAASA,SAAT,CAAoBC,OAApB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,OAAT,KAAwB,eAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,uBAAT,KAAwC,kBAAxC,C,wFAGA,GAAMC,CAAAA,GAAG,CAAG,GAAIF,CAAAA,WAAJ,CAAgB,SAAhB,CAAZ,CAEA,GAAMG,CAAAA,gBAAgB,CAAGD,GAAG,CAACE,mBAAJ,CACvB,4CADuB,CAAzB,CAIA,GAAMC,CAAAA,WAAW,CAAGH,GAAG,CAACI,cAAJ,CAClB,4CADkB,CAApB,CAIA,GAAMC,CAAAA,UAAU,CAAGL,GAAG,CAACM,aAAJ,CACjB,4CADiB,CAAnB,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,YAAoDV,OAAO,EAA3D,CAAQW,aAAR,SAAQA,aAAR,CAAuBC,OAAvB,SAAuBA,OAAvB,CAAgCC,KAAhC,SAAgCA,KAAhC,CAAuCC,QAAvC,SAAuCA,QAAvC,CACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BJ,OAA3B,EAEA;AACA;AACA,GAAMK,CAAAA,MAAM,CAAGH,QAAQ,CAAGA,QAAQ,CAACI,SAAT,EAAH,CAA0BC,SAAjD,CAEA,cAA0CrB,QAAQ,CAAC,KAAD,CAAlD,wCAAOsB,aAAP,eAAsBC,gBAAtB,eACA;AACA,eAAoCvB,QAAQ,CAAC,KAAD,CAA5C,yCAAOwB,UAAP,eAAmBC,aAAnB,eACA;AACF,eAAoDzB,QAAQ,CAAC,EAAD,CAA5D,yCAAO0B,kBAAP,eAA2BC,qBAA3B,eACA;AACA,eAA8C3B,QAAQ,CAAC,EAAD,CAAtD,yCAAO4B,eAAP,eAAwBC,kBAAxB,eACA,eAAkC7B,QAAQ,CAAC,EAAD,CAA1C,0CAAO8B,SAAP,gBAAkBC,YAAlB,gBACA,gBAAgC/B,QAAQ,CAAC,KAAD,CAAxC,2CAAOgC,QAAP,gBAAiBC,WAAjB,gBACA,gBAAgCjC,QAAQ,CAAC,KAAD,CAAxC,2CAAOkC,QAAP,gBAAiBC,WAAjB,gBAEA;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAS,CAC9B,MAAOA,CAAAA,GAAG,CAACC,SAAJ,CAAc,CAAd,CAAiB,CAAjB,EAAsB,KAAtB,CAA8BD,GAAG,CAACC,SAAJ,CAAcD,GAAG,CAACE,MAAJ,CAAa,CAA3B,CAArC,CACD,CAFD,CAIA;AACAzC,SAAS,CAAC,UAAM,CACd,GAAI,CAACwB,aAAL,CAAoB,CAClB,OACD,CAED;AACA;AACAhB,gBAAgB,CACbkC,sBADH,CAC0B,GAD1B,EAEGC,IAFH,CAEQ,SAACC,SAAD,CAAe,CACnBzB,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCwB,SAApC,EACAb,kBAAkB,CAACa,SAAD,CAAlB,CACD,CALH,EAMGC,KANH,CAMS,SAACC,GAAD,CAAS,CACd3B,OAAO,CAACF,KAAR,CAAc,2BAAd,CAA2C6B,GAA3C,EACD,CARH,EASD,CAhBQ,CAgBN,CAACtB,aAAD,CAhBM,CAAT,CAkBA;AACAxB,SAAS,CAAC,UAAM,CACd,GAAI,CAACwB,aAAL,CAAoB,CAClB,OACD,CAED;AACAd,WAAW,CACRqC,oBADH,GAEGJ,IAFH,CAEQ,SAACK,OAAD,CAAa,CACjB7B,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0B4B,OAA1B,EACAnB,qBAAqB,CAACmB,OAAD,CAArB,CACD,CALH,EAMGH,KANH,CAMS,SAACC,GAAD,CAAS,CACd3B,OAAO,CAACF,KAAR,CAAc,6BAAd,CAA6C6B,GAA7C,EACD,CARH,EASD,CAfQ,CAeN,CAACtB,aAAD,CAfM,CAAT,CAiBA;AACA,GAAMyB,CAAAA,UAAU,CAAGhD,OAAO,CAAC,UAAM,CAC/B,MAAO6B,CAAAA,eAAe,CAACoB,GAAhB,CAAoB,SAAClC,OAAD,CAAa,CACtC,MAAO,CACLA,OAAO,CAAPA,OADK,CAELmC,WAAW,CAAEhD,MAAM,CAACiD,KAAP,CAAaC,WAAb,CACX;AACA;AACAzB,kBAAkB,CAACZ,OAAD,CAAlB,EAA+B,CAHpB,CAIX,EAJW,CAFR,CAAP,CASD,CAVM,CAAP,CAWD,CAZyB,CAYvB,CAACc,eAAD,CAAkBF,kBAAlB,CAZuB,CAA1B,CAaE;AACA5B,SAAS,CAAC,UAAM,CACd;AACA;AACAO,GAAG,CAAC+C,mBAAJ,CAAwBjC,MAAxB,EACD,CAJQ,CAIN,CAACA,MAAD,CAJM,CAAT,CAMArB,SAAS,CAAC,UAAM,CACd,GAAI,CAACgB,OAAL,CAAc,CACZ,OACD,CACD,MAAOR,CAAAA,gBAAgB,CACpB+C,SADI,CACMvC,OADN,CACe,GADf,EAEJ2B,IAFI,CAEC,SAACa,OAAD,CAAa,CACjB,GAAIA,OAAO,CAACC,EAAR,CAAW,CAAX,CAAJ,CAAmB,CACjBhC,gBAAgB,CAAC,IAAD,CAAhB,CACAN,OAAO,CAACC,GAAR,CAAY,oCAAZ,EACD,CAHD,IAGO,CACLK,gBAAgB,CAAC,KAAD,CAAhB,CACAN,OAAO,CAACC,GAAR,CAAY,6CAAZ,EACD,CACF,CAVI,EAWJyB,KAXI,CAWE,SAAC5B,KAAD,CAAW,CAChBQ,gBAAgB,CAAC,KAAD,CAAhB,CACAN,OAAO,CAACF,KAAR,CAAc,uBAAd,CAAuCA,KAAvC,EACD,CAdI,CAAP,CAeD,CAnBQ,CAmBN,CAACD,OAAD,CAnBM,CAAT,CAoBA,GAAIC,KAAK,WAAYX,CAAAA,uBAArB,CAA+C,CAC7C,mBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,iDADF,cAEE,oHAFF,GADF,CASD,CACH;AACE,GAAI,CAACU,OAAL,CAAc,CACZ,mBACE,aAAK,SAAS,CAAC,SAAf,wBACE,oDADF,cAEE,eAAQ,OAAO,CAAE,yBAAMD,CAAAA,aAAa,CAAC,UAAD,CAAnB,EAAjB,CAAkD,SAAS,CAAC,UAA5D,iCAFF,GADF,CAQD,CACD;AACA,GAAIS,aAAJ,CAAmB,CACjB,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,8DADF,cAEE,wDAFF,cAGE,oCACE,oCACE,mCADF,cAEE,eAAO,SAAS,CAAC,MAAjB,wBACE,oCACE,mCACE,+BADF,cAEE,oCAFF,GADF,EADF,cAOE,uBACGyB,UAAU,CAACC,GAAX,CAAe,SAACQ,MAAD,CAAY,CAC1B,mBACE,mCACE,oBAAKpB,cAAc,CAACoB,MAAM,CAAC1C,OAAR,CAAnB,EADF,cAEE,oBAAK0C,MAAM,CAACP,WAAZ,EAFF,GAASO,MAAM,CAAC1C,OAAhB,CADF,CAMD,CAPA,CADH,EAPF,GAFF,GADF,cAsBE,oCACE,wCADF,cAEE,cACE,QAAQ,0FAAE,kBAAO2C,CAAP,2IACRA,CAAC,CAACC,cAAF,GACAD,CAAC,CAACE,eAAF,GAEA;AACA1B,WAAW,CAAC,IAAD,CAAX,CAEA;AACM2B,KARE,CAQM9B,SAAS,CAACkB,GAAV,CAAc,SAACa,QAAD,CAAc,CACxC,GAAIC,CAAAA,UAAU,CAAG,CACfC,UAAU,CAAEF,QAAQ,CAACE,UADN,CAEf;AACAC,IAAI,CAAE,CAHS,CAAjB,CAKAH,QAAQ,CAACD,KAAT,CAAeK,OAAf,CAAuB,SAACD,IAAD,CAAU,CAC/B,GAAME,CAAAA,IAAI,CAAGC,QAAQ,CAACC,cAAT,CACXP,QAAQ,CAACE,UAAT,CAAsB,GAAtB,CAA4BC,IAAI,CAACK,IADtB,CAAb,CAIA,GAAIH,IAAI,CAACI,OAAT,CAAkB,CAChBR,UAAU,CAACE,IAAX,CAAkBA,IAAI,CAACK,IAAvB,CACA,OACD,CACF,CATD,EAUA,MAAOP,CAAAA,UAAP,CACD,CAjBa,CARN,CA2BR;AA3BQ,wCA8BmBtD,CAAAA,WAAW,CAAC+D,eAAZ,CAA4BzD,OAA5B,CA9BnB,QA8BA0D,UA9BA,qBAgCFA,UAAU,GAAKvE,MAAM,CAACwE,SAAP,CAAiBC,WAhC9B,oDAkCElE,CAAAA,WAAW,CAACmE,UAAZ,CAAuB7D,OAAvB,CAlCF,mDAsCE8D,CAAAA,OAAO,CAACC,GAAR,CACJjB,KAAK,CAACZ,GAAN,2FAAU,iBAAOgB,IAAP,qJAGetD,CAAAA,UAAU,CAACoE,GAAX,CAAed,IAAI,CAACD,UAApB,CAHf,QAGFF,QAHE,oBAKJA,QAAQ,CAACkB,KAAT,GAAmB,CALf,0DAOCrE,UAAU,CAACsD,IAAX,CAAgBA,IAAI,CAACD,UAArB,CAAiCC,IAAI,CAACA,IAAtC,CAPD,gGAAV,iEADI,CAtCF,mDAuDIY,CAAAA,OAAO,CAACC,GAAR,CACJjB,KAAK,CAACZ,GAAN,2FAAU,kBAAOgB,IAAP,0JAEetD,CAAAA,UAAU,CAACoE,GAAX,CACrBd,IAAI,CAACD,UADgB,CAFf,QAEFF,QAFE,qBAOJA,QAAQ,CAACkB,KAAT,GAAmB,CAPf,4DAQCrE,UAAU,CAACsE,OAAX,CAAmBhB,IAAI,CAACD,UAAxB,CARD,0DAAV,iEADI,CAvDJ,SAoEF;AACA5B,WAAW,CAAC,IAAD,CAAX,CACA;AACAlB,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAvEE,sFAyEFD,OAAO,CAACF,KAAR,CAAc,yBAAd,eAzEE,8FA4EJE,OAAO,CAACF,KAAR,CAAc,gBAAd,eA5EI,6FA+ENE,OAAO,CAACF,KAAR,CAAc,2BAAd,EA/EM,0BAiFN;AACAkB,WAAW,CAAC,KAAD,CAAX,CAlFM,yHAAF,8DADV,WAuFGH,SAAS,CAACkB,GAAV,CAAc,SAACa,QAAD,CAAWoB,KAAX,qBACb,aAA+B,SAAS,CAAC,MAAzC,wBACE,oBAAKpB,QAAQ,CAACqB,WAAd,EADF,cAEE,qBACGrB,QAAQ,CAACD,KAAT,CAAeZ,GAAf,CAAmB,SAACgB,IAAD,qBAClB,oCACE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAEH,QAAQ,CAACE,UAAT,CAAsB,GAAtB,CAA4BC,IAAI,CAACK,IAFvC,CAGE,IAAI,CAAER,QAAQ,CAACE,UAHjB,CAIE,KAAK,CAAEC,IAAI,CAACK,IACZ;AALF,CAME,cAAc,CAAEL,IAAI,CAACK,IAAL,GAAc,CANhC,EADF,cASE,cAAO,OAAO,CAAER,QAAQ,CAACE,UAAT,CAAsB,GAAtB,CAA4BC,IAAI,CAACK,IAAjD,UACGL,IAAI,CAACmB,KADR,EATF,GAAUnB,IAAI,CAACK,IAAf,CADkB,EAAnB,CADH,EAFF,GAAUR,QAAQ,CAACE,UAAnB,CADa,EAAd,CAvFH,cA6GE,eAAQ,QAAQ,CAAE/B,QAAQ,EAAIE,QAA9B,CAAwC,IAAI,CAAC,QAA7C,UACGF,QAAQ,CACL,WADK,CAELE,QAAQ,CACN,mBADM,CAEN,cALR,EA7GF,cAoHE,8FApHF,GAFF,GAtBF,GAHF,GADF,CAyJD,EACH;AACE,GAAMkD,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB3D,aAAa,CAAC,IAAD,CAAb,CACA;AACAnB,gBAAgB,CACf+E,KADD,CACO,GADP,CACY,CADZ,EAEC5C,IAFD,CAEM,UAAM,CACV;AACAlB,gBAAgB,CAAC,IAAD,CAAhB,CACA;AACAN,OAAO,CAACC,GAAR,yGACyFZ,gBAAgB,CAACQ,OAAjB,CAAyBwE,WAAzB,EADzF,QAGD,CATD,EAUC3C,KAVD,CAUO,SAACC,GAAD,CAAS,CACd3B,OAAO,CAACF,KAAR,CAAc,iBAAd,CAAiC6B,GAAjC,EACD,CAZD,EAaC2C,OAbD,CAaS,UAAM,CACb;AACA9D,aAAa,CAAC,KAAD,CAAb,CACD,CAhBD,EAiBD,CApBD,CAsBA;AACA,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,qEADF,cAEE,eACE,QAAQ,CAAED,UADZ,CAEE,OAAO,CAAE,yBAAM4D,CAAAA,OAAO,EAAb,EAFX,UAIG5D,UAAU,CAAG,YAAH,CAAkB,sBAJ/B,EAFF,GADF,CAWD,CA3TD,CA6TA,cAAeZ,CAAAA,GAAf","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useWeb3 } from \"@3rdweb/hooks\";\nimport { ThirdwebSDK } from \"@3rdweb/sdk\";\n\nimport { UnsupportedChainIdError } from \"@web3-react/core\";\n\n\nconst sdk = new ThirdwebSDK(\"rinkeby\");\n\nconst bundleDropModule = sdk.getBundleDropModule(\n  \"0xA147969A02B7Ab46364E8399aeb3396Ad0a6134a\",\n);\n\nconst tokenModule = sdk.getTokenModule(\n  \"0x3418AA364aAddbFF91Ed0d74D415C4c4D2Fe6324\"\n);\n\nconst voteModule = sdk.getVoteModule(\n  \"0x449bABD357d84a7Fe3FFe3D6182f9439BdeCbd6A\",\n);\nconst App = () => {\n  const { connectWallet, address, error, provider } = useWeb3();\n  console.log(\"👋 Address:\", address)\n\n  // The signer is required to sign transactions on the blockchain.\n  // Without it we can only read data, not write.\n  const signer = provider ? provider.getSigner() : undefined;\n\n  const [hasClaimedNFT, setHasClaimedNFT] = useState(false);\n  // isClaiming lets us easily keep a loading state while the NFT is minting.\n  const [isClaiming, setIsClaiming] = useState(false);\n  // Holds the amount of token each member has in state.\nconst [memberTokenAmounts, setMemberTokenAmounts] = useState({});\n// The array holding all of our members addresses.\nconst [memberAddresses, setMemberAddresses] = useState([]);\nconst [proposals, setProposals] = useState([]);\nconst [isVoting, setIsVoting] = useState(false);\nconst [hasVoted, setHasVoted] = useState(false);\n\n// A fancy function to shorten someones wallet address, no need to show the whole thing. \nconst shortenAddress = (str) => {\n  return str.substring(0, 6) + \"...\" + str.substring(str.length - 4);\n};\n\n// This useEffect grabs all the addresses of our members holding our NFT.\nuseEffect(() => {\n  if (!hasClaimedNFT) {\n    return;\n  }\n  \n  // Just like we did in the 7-airdrop-token.js file! Grab the users who hold our NFT\n  // with tokenId 0.\n  bundleDropModule\n    .getAllClaimerAddresses(\"0\")\n    .then((addresses) => {\n      console.log(\"🚀 Members addresses\", addresses)\n      setMemberAddresses(addresses);\n    })\n    .catch((err) => {\n      console.error(\"failed to get member list\", err);\n    });\n}, [hasClaimedNFT]);\n\n// This useEffect grabs the # of token each member holds.\nuseEffect(() => {\n  if (!hasClaimedNFT) {\n    return;\n  }\n\n  // Grab all the balances.\n  tokenModule\n    .getAllHolderBalances()\n    .then((amounts) => {\n      console.log(\"👜 Amounts\", amounts)\n      setMemberTokenAmounts(amounts);\n    })\n    .catch((err) => {\n      console.error(\"failed to get token amounts\", err);\n    });\n}, [hasClaimedNFT]);\n\n// Now, we combine the memberAddresses and memberTokenAmounts into a single array\nconst memberList = useMemo(() => {\n  return memberAddresses.map((address) => {\n    return {\n      address,\n      tokenAmount: ethers.utils.formatUnits(\n        // If the address isn't in memberTokenAmounts, it means they don't\n        // hold any of our token.\n        memberTokenAmounts[address] || 0,\n        18,\n      ),\n    };\n  });\n}, [memberAddresses, memberTokenAmounts]);\n  // Another useEffect!\n  useEffect(() => {\n    // We pass the signer to the sdk, which enables us to interact with\n    // our deployed contract!\n    sdk.setProviderOrSigner(signer);\n  }, [signer]);\n\n  useEffect(() => {\n    if (!address) {\n      return;\n    }\n    return bundleDropModule\n      .balanceOf(address, \"0\")\n      .then((balance) => {\n        if (balance.gt(0)) {\n          setHasClaimedNFT(true);\n          console.log(\"🌟 this user has a membership NFT!\")\n        } else {\n          setHasClaimedNFT(false);\n          console.log(\"😭 this user doesn't have a membership NFT.\")\n        }\n      })\n      .catch((error) => {\n        setHasClaimedNFT(false);\n        console.error(\"failed to nft balance\", error);\n      });\n  }, [address]);\n  if (error instanceof UnsupportedChainIdError ) {\n    return (\n      <div className=\"unsupported-network\">\n        <h2>Please connect to Rinkeby</h2>\n        <p>\n          This dapp only works on the Rinkeby network, please switch networks\n          in your connected wallet.\n        </p>\n      </div>\n    );\n  }\n//case 1 when metamask not connected\n  if (!address) {\n    return (\n      <div className=\"landing\">\n        <h1>Welcome to Chai Ki Tapri DAO</h1>\n        <button onClick={() => connectWallet(\"injected\")} className=\"btn-hero\">\n          Connect your wallet\n        </button>\n      </div>\n    );\n  }\n  //if connected wallet, minted nft for joining dao, show membership page. Case 3, show list of all holders\n  if (hasClaimedNFT) {\n    return (\n      <div className=\"member-page\">\n        <h1>🍪Chai Ki Tapri Members Page</h1>\n        <p>Congratulations on being a member</p>\n        <div>\n          <div>\n            <h2>Member List</h2>\n            <table className=\"card\">\n              <thead>\n                <tr>\n                  <th>Address</th>\n                  <th>Token Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {memberList.map((member) => {\n                  return (\n                    <tr key={member.address}>\n                      <td>{shortenAddress(member.address)}</td>\n                      <td>{member.tokenAmount}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <div>\n            <h2>Active Proposals</h2>\n            <form\n              onSubmit={async (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n\n                //before we do async things, we want to disable the button to prevent double clicks\n                setIsVoting(true);\n\n                // lets get the votes from the form for the values\n                const votes = proposals.map((proposal) => {\n                  let voteResult = {\n                    proposalId: proposal.proposalId,\n                    //abstain by default\n                    vote: 2,\n                  };\n                  proposal.votes.forEach((vote) => {\n                    const elem = document.getElementById(\n                      proposal.proposalId + \"-\" + vote.type\n                    );\n\n                    if (elem.checked) {\n                      voteResult.vote = vote.type;\n                      return;\n                    }\n                  });\n                  return voteResult;\n                });\n\n                // first we need to make sure the user delegates their token to vote\n                try {\n                  //we'll check if the wallet still needs to delegate their tokens before they can vote\n                  const delegation = await tokenModule.getDelegationOf(address);\n                  // if the delegation is the 0x0 address that means they have not delegated their governance tokens yet\n                  if (delegation === ethers.constants.AddressZero) {\n                    //if they haven't delegated their tokens yet, we'll have them delegate them before voting\n                    await tokenModule.delegateTo(address);\n                  }\n                  // then we need to vote on the proposals\n                  try {\n                    await Promise.all(\n                      votes.map(async (vote) => {\n                        // before voting we first need to check whether the proposal is open for voting\n                        // we first need to get the latest state of the proposal\n                        const proposal = await voteModule.get(vote.proposalId);\n                        // then we check if the proposal is open for voting (state === 1 means it is open)\n                        if (proposal.state === 1) {\n                          // if it is open for voting, we'll vote on it\n                          return voteModule.vote(vote.proposalId, vote.vote);\n                        }\n                        // if the proposal is not open for voting we just return nothing, letting us continue\n                        return;\n                      })\n                    );\n                    try {\n                      // if any of the propsals are ready to be executed we'll need to execute them\n                      // a proposal is ready to be executed if it is in state 4\n                      await Promise.all(\n                        votes.map(async (vote) => {\n                          // we'll first get the latest state of the proposal again, since we may have just voted before\n                          const proposal = await voteModule.get(\n                            vote.proposalId\n                          );\n\n                          //if the state is in state 4 (meaning that it is ready to be executed), we'll execute the proposal\n                          if (proposal.state === 4) {\n                            return voteModule.execute(vote.proposalId);\n                          }\n                        })\n                      );\n                      // if we get here that means we successfully voted, so let's set the \"hasVoted\" state to true\n                      setHasVoted(true);\n                      // and log out a success message\n                      console.log(\"successfully voted\");\n                    } catch (err) {\n                      console.error(\"failed to execute votes\", err);\n                    }\n                  } catch (err) {\n                    console.error(\"failed to vote\", err);\n                  }\n                } catch (err) {\n                  console.error(\"failed to delegate tokens\");\n                } finally {\n                  // in *either* case we need to set the isVoting state to false to enable the button again\n                  setIsVoting(false);\n                }\n              }}\n            >\n              {proposals.map((proposal, index) => (\n                <div key={proposal.proposalId} className=\"card\">\n                  <h5>{proposal.description}</h5>\n                  <div>\n                    {proposal.votes.map((vote) => (\n                      <div key={vote.type}>\n                        <input\n                          type=\"radio\"\n                          id={proposal.proposalId + \"-\" + vote.type}\n                          name={proposal.proposalId}\n                          value={vote.type}\n                          //default the \"abstain\" vote to chedked\n                          defaultChecked={vote.type === 2}\n                        />\n                        <label htmlFor={proposal.proposalId + \"-\" + vote.type}>\n                          {vote.label}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              <button disabled={isVoting || hasVoted} type=\"submit\">\n                {isVoting\n                  ? \"Voting...\"\n                  : hasVoted\n                    ? \"You Already Voted\"\n                    : \"Submit Votes\"}\n              </button>\n              <small>\n                This will trigger multiple transactions that you will need to\n                sign.\n              </small>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  };\n//if not claimed then claim using mintNft\n  const mintNft = () => {\n    setIsClaiming(true);\n    // Call bundleDropModule.claim(\"0\", 1) to mint nft to user's wallet.\n    bundleDropModule\n    .claim(\"0\", 1)\n    .then(() => {\n      // Set claim state.\n      setHasClaimedNFT(true);\n      // Show user their fancy new NFT!\n      console.log(\n        `🌊 Successfully Minted! Check it our on OpenSea: https://testnets.opensea.io/assets/${bundleDropModule.address.toLowerCase()}/0`\n      );\n    })\n    .catch((err) => {\n      console.error(\"failed to claim\", err);\n    })\n    .finally(() => {\n      // Stop loading state.\n      setIsClaiming(false);\n    });\n  }\n\n  // Render mint nft screen.\n  return (\n    <div className=\"mint-nft\">\n      <h1>Mint your free 🍪DAO Membership NFT</h1>\n      <button\n        disabled={isClaiming}\n        onClick={() => mintNft()}\n      >\n        {isClaiming ? \"Minting...\" : \"Mint your nft (FREE)\"}\n      </button>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}