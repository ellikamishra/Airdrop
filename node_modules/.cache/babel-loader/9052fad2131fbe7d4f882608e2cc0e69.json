{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _regeneratorRuntime = require(\"/home/ellika/Web3/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/ellika/Web3/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkProvider = void 0;\n\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\n\nvar WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\n\nvar EthereumChain_1 = require(\"../EthereumChain\");\n\nvar init_1 = require(\"../init\");\n\nvar Session_1 = require(\"../relay/Session\");\n\nvar WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\n\nvar util_1 = require(\"../util\");\n\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\n\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nvar JSONRPC_1 = require(\"./JSONRPC\");\n\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\n\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\"; // Indicates chain has been switched by switchEthereumChain or addEthereumChain request\n\nvar HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nvar HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\n\nvar WalletLinkProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(WalletLinkProvider, _safe_event_emitter_);\n\n  var _super = _createSuper(WalletLinkProvider);\n\n  function WalletLinkProvider(options) {\n    var _this;\n\n    _classCallCheck(this, WalletLinkProvider);\n\n    _this = _super.call(this); // So dapps can easily identify Coinbase Wallet for enabling features like 3085 network switcher menus\n\n    _this.isCoinbaseWallet = true;\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send;\n    _this._sendAsync = _this.sendAsync;\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this._walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n\n    var chainId = _this.getChainId();\n\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16)); // indicate that we've connected, for EIP-1193 compliance\n\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n\n    var cachedAddresses = _this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses;\n\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n\n    if (_this._addresses.length > 0) {\n      _this.initializeRelay();\n    }\n\n    window.addEventListener('message', function (event) {\n      var _a;\n\n      if (event.data.type !== 'walletLinkMessage') return;\n\n      if (event.data.data.action === 'defaultChainChanged') {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n    return _this;\n  }\n\n  _createClass(WalletLinkProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"isChainOverridden\",\n    get: function get() {\n      return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === 'true';\n    },\n    set: function set(value) {\n      this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    } // @ts-ignore\n\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      if (this.isChainOverridden) return;\n      this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n      var hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n      if (hasChainSwitched && fromRelay) return;\n\n      if (fromRelay) {\n        this.isChainOverridden = true;\n      }\n\n      this.jsonRpcUrl = jsonRpcUrl; // emit chainChanged event if necessary\n\n      var originalChainId = this.getChainId();\n\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, res;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context.sent;\n                _context.next = 5;\n                return relay.addEthereumChain(chainId.toString(), rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency).promise;\n\n              case 5:\n                res = _context.sent;\n\n                if (!(typeof res.result === 'boolean')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                // legacy handling. to be deprecated in february 2022\n                if (res.result === true) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                  this.updateProviderInfo(rpcUrls[0], chainId, false);\n                }\n\n                return _context.abrupt(\"return\", res.result === true);\n\n              case 9:\n                if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                  this.updateProviderInfo(rpcUrls[0], chainId, false);\n                }\n\n                return _context.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addEthereumChain(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chainId) {\n        var _a, relay, res, switchResponse, ethereumChain, rpcUrl;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context2.sent;\n                _context2.next = 7;\n                return relay.switchEthereumChain(chainId.toString(10)).promise;\n\n              case 7:\n                res = _context2.sent;\n\n                if (typeof res.result !== 'boolean') {\n                  switchResponse = res.result;\n\n                  if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                    this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                    this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n                  }\n                } else {\n                  // this is for legacy clients that return a boolean as result. can deprecate below in February 2022\n                  if (res.result) {\n                    this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                    ethereumChain = EthereumChain_1.EthereumChain.fromChainId(BigInt(chainId));\n                    rpcUrl = (_a = EthereumChain_1.EthereumChain.rpcUrl(ethereumChain)) !== null && _a !== void 0 ? _a : \"\";\n                    this.updateProviderInfo(rpcUrl, chainId, false);\n                  }\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function switchEthereumChain(_x7) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::enable\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n                });\n\n                if (!(this._addresses.length > 0)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this._addresses);\n\n              case 3:\n                _context3.next = 5;\n                return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n\n              case 5:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.initializeRelay().then(function (relay) {\n        return relay.resetAndReload();\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      } // send(JSONRPCRequest): JSONRPCResponse\n\n\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      } // send(JSONRPCRequest[], callback): void\n\n\n      if (Array.isArray(request)) {\n        var arrayCb = callback;\n\n        this._sendMultipleRequestsAsync(request).then(function (responses) {\n          return arrayCb(null, responses);\n        }).catch(function (err) {\n          return arrayCb(err, null);\n        });\n\n        return;\n      } // send(JSONRPCRequest, callback): void\n\n\n      var cb = callback;\n\n      this._sendRequestAsync(request).then(function (response) {\n        return cb(null, response);\n      }).catch(function (err) {\n        return cb(err, null);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"Expected a single, non-array, object argument.\",\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.method' must be a non-empty string.\",\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.params' must be an object or array if provided.\",\n                  data: args\n                });\n\n              case 7:\n                newParams = params === undefined ? [] : params; // WalletLink Requests\n\n                id = this._relayEventManager.makeRequestId();\n                _context4.next = 11;\n                return this._sendRequestAsync({\n                  method: method,\n                  params: newParams,\n                  jsonrpc: \"2.0\",\n                  id: id\n                });\n\n              case 11:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result.result);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function request(_x8) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(match) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context5.sent;\n                _context5.next = 5;\n                return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n\n              case 5:\n                res = _context5.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context5.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function scanQRCode(_x9) {\n        return _scanQRCode.apply(this, arguments);\n      }\n\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data, action) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context6.sent;\n                _context6.next = 5;\n                return relay.genericRequest(data, action).promise;\n\n              case 5:\n                res = _context6.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context6.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function genericRequest(_x10, _x11) {\n        return _genericRequest.apply(this, arguments);\n      }\n\n      return genericRequest;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n\n      if (response.result === undefined) {\n        throw new Error(\"WalletLink does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n\n      this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n\n      window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", {\n        detail: this._addresses\n      }));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function _handleAsynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n          return this._eth_requestAccounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_sign:\n          return this._eth_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n          return this._eth_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_sign:\n          return this._personal_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n          return this._personal_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n          return this._eth_signTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n          return this._eth_sendRawTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n          return this._eth_sendTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n          return this._eth_signTypedData_v1(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n          return this._throwUnsupportedMethodError();\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n          return this._eth_signTypedData_v3(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n          return this._eth_signTypedData_v4(params);\n\n        case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n          return this._walletlink_arbitrary(params);\n\n        case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n          return this._wallet_addEthereumChain(params);\n\n        case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n          return this._wallet_switchEthereumChain(params);\n      }\n\n      if (!this.jsonRpcUrl) throw Error(\"Error: No jsonRpcUrl provided\");\n      return window.fetch(this.jsonRpcUrl, {\n        method: \"POST\",\n        body: JSON.stringify(request),\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!json) {\n          throw eth_rpc_errors_1.ethErrors.rpc.parse({});\n        }\n\n        var response = json;\n        var error = response.error;\n\n        if (error) {\n          throw (0, eth_rpc_errors_1.serializeError)(error);\n        }\n\n        return response;\n      });\n    }\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var address = (0, util_1.ensureAddressString)(addressString);\n        return this._addresses.includes(address);\n      } catch (_a) {}\n\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      if (!this._isKnownAddress(addressString)) {\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n\n      this._ensureKnownAddress(fromAddress);\n\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (this._addresses.length === 0) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this._ensureKnownAddress(address);\n\n                _context7.prev = 1;\n                _context7.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context7.sent;\n                _context7.next = 7;\n                return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n\n              case 7:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 11:\n                _context7.prev = 11;\n                _context7.t0 = _context7[\"catch\"](1);\n\n                if (!(typeof _context7.t0.message === \"string\" && _context7.t0.message.match(/(denied|rejected)/i))) {\n                  _context7.next = 15;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n\n              case 15:\n                throw _context7.t0;\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 11]]);\n      }));\n\n      function _signEthereumMessage(_x12, _x13, _x14, _x15) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context8.sent;\n                _context8.next = 5;\n                return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n\n              case 5:\n                res = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function _ethereumAddressFromSignedMessage(_x16, _x17, _x18) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return this._addresses;\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var res, relay;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::_eth_requestAccounts\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n                });\n\n                if (!(this._addresses.length > 0)) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", Promise.resolve({\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                }));\n\n              case 3:\n                _context9.prev = 3;\n                _context9.next = 6;\n                return this.initializeRelay();\n\n              case 6:\n                relay = _context9.sent;\n                _context9.next = 9;\n                return relay.requestEthereumAccounts().promise;\n\n              case 9:\n                res = _context9.sent;\n                _context9.next = 17;\n                break;\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](3);\n\n                if (!(typeof _context9.t0.message === \"string\" && _context9.t0.message.match(/(denied|rejected)/i))) {\n                  _context9.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n\n              case 16:\n                throw _context9.t0;\n\n              case 17:\n                if (res.result) {\n                  _context9.next = 19;\n                  break;\n                }\n\n                throw new Error(\"accounts received is empty\");\n\n              case 19:\n                this._setAddresses(res.result);\n\n                return _context9.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                });\n\n              case 21:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[3, 12]]);\n      }));\n\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context10.prev = 2;\n                _context10.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context10.sent;\n                _context10.next = 8;\n                return relay.signEthereumTransaction(tx).promise;\n\n              case 8:\n                res = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](2);\n\n                if (!(typeof _context10.t0.message === \"string\" && _context10.t0.message.match(/(denied|rejected)/i))) {\n                  _context10.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context10.t0;\n\n              case 17:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[2, 12]]);\n      }));\n\n      function _eth_signTransaction(_x19) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n                _context11.next = 3;\n                return this.initializeRelay();\n\n              case 3:\n                relay = _context11.sent;\n                _context11.next = 6;\n                return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n\n              case 6:\n                res = _context11.sent;\n                return _context11.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _eth_sendRawTransaction(_x20) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context12.prev = 2;\n                _context12.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context12.sent;\n                _context12.next = 8;\n                return relay.signAndSubmitEthereumTransaction(tx).promise;\n\n              case 8:\n                res = _context12.sent;\n                return _context12.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context12.prev = 12;\n                _context12.t0 = _context12[\"catch\"](2);\n\n                if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                  _context12.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context12.t0;\n\n              case 17:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[2, 12]]);\n      }));\n\n      function _eth_sendTransaction(_x21) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this._requireAuthorization();\n\n                typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n                address = (0, util_1.ensureAddressString)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context13.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _eth_signTypedData_v1(_x22) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context14.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _eth_signTypedData_v3(_x23) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context15.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _eth_signTypedData_v4(_x24) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v4;\n    }()\n  }, {\n    key: \"_walletlink_arbitrary\",\n    value: function () {\n      var _walletlink_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(params) {\n        var action, data, result;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                action = params[0];\n                data = params[1];\n\n                if (!(typeof data !== \"string\")) {\n                  _context16.next = 4;\n                  break;\n                }\n\n                throw new Error(\"parameter must be a string\");\n\n              case 4:\n                if (!(typeof action !== \"object\" || action === null)) {\n                  _context16.next = 6;\n                  break;\n                }\n\n                throw new Error(\"parameter must be an object\");\n\n              case 6:\n                _context16.next = 8;\n                return this.genericRequest(action, data);\n\n              case 8:\n                result = _context16.sent;\n                return _context16.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: result\n                });\n\n              case 10:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _walletlink_arbitrary(_x25) {\n        return _walletlink_arbitrary2.apply(this, arguments);\n      }\n\n      return _walletlink_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(params) {\n        var _a, _b, request, chainIdNumber, success;\n\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                request = params[0];\n\n                if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                  _context17.next = 3;\n                  break;\n                }\n\n                return _context17.abrupt(\"return\", {\n                  jsonrpc: '2.0',\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"please pass in at least 1 rpcUrl\"\n                  }\n                });\n\n              case 3:\n                chainIdNumber = parseInt(request.chainId, 16);\n                _context17.next = 6;\n                return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], request.blockExplorerUrls, request.chainName, request.iconUrls, request.nativeCurrency);\n\n              case 6:\n                success = _context17.sent;\n\n                if (!success) {\n                  _context17.next = 11;\n                  break;\n                }\n\n                return _context17.abrupt(\"return\", {\n                  jsonrpc: '2.0',\n                  id: 0,\n                  result: null\n                });\n\n              case 11:\n                return _context17.abrupt(\"return\", {\n                  jsonrpc: '2.0',\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"unable to add ethereum chain\"\n                  }\n                });\n\n              case 12:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _wallet_addEthereumChain(_x26) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(params) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                request = params[0];\n                _context18.next = 3;\n                return this.switchEthereumChain(parseInt(request.chainId, 16));\n\n              case 3:\n                return _context18.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function _wallet_switchEthereumChain(_x27) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(params) {\n        var param, filterId;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                param = params[0];\n                _context19.next = 3;\n                return this._filterPolyfill.newFilter(param);\n\n              case 3:\n                filterId = _context19.sent;\n                return _context19.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function _eth_newFilter(_x28) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this._filterPolyfill.newBlockFilter();\n\n              case 2:\n                filterId = _context20.sent;\n                return _context20.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this._filterPolyfill.newPendingTransactionFilter();\n\n              case 2:\n                filterId = _context21.sent;\n                return _context21.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts) {\n          return _this5._setAddresses(accounts);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n        });\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n\n  return WalletLinkProvider;\n}(safe_event_emitter_1.default);\n\nexports.WalletLinkProvider = WalletLinkProvider;","map":{"version":3,"sources":["/home/ellika/Web3/node_modules/walletlink/dist/provider/WalletLinkProvider.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WalletLinkProvider","safe_event_emitter_1","require","bn_js_1","eth_rpc_errors_1","WalletLinkAnalytics_1","EthereumChain_1","init_1","Session_1","WalletLinkRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","HAS_CHAIN_BEEN_SWITCHED_KEY","HAS_CHAIN_OVERRIDDEN_FROM_RELAY","options","isCoinbaseWallet","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","_sendAsync","sendAsync","setProviderInfo","bind","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","_walletLinkAnalytics","walletLinkAnalytics","WalletLinkAnalytics","chainId","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","_a","action","Number","undefined","setItem","isChainOverridden","fromRelay","hasChainSwitched","originalChainId","chainChanged","ensureIntNumber","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","relay","addEthereumChain","promise","res","result","isApproved","_b","switchEthereumChain","switchResponse","rpcUrl","ethereumChain","EthereumChain","fromChainId","BigInt","appName","appLogoUrl","then","sendEvent","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","map","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","ethErrors","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","_handleSynchronousMethods","newAddresses","address","ensureAddressString","JSON","stringify","join","dispatchEvent","CustomEvent","detail","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_eth_requestAccounts","eth_sign","_eth_sign","eth_ecRecover","_eth_ecRecover","personal_sign","_personal_sign","personal_ecRecover","_personal_ecRecover","eth_signTransaction","_eth_signTransaction","eth_sendRawTransaction","_eth_sendRawTransaction","eth_sendTransaction","_eth_sendTransaction","eth_signTypedData_v1","_eth_signTypedData_v1","eth_signTypedData_v2","_throwUnsupportedMethodError","eth_signTypedData_v3","_eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","_eth_signTypedData_v4","walletlink_arbitrary","_walletlink_arbitrary","wallet_addEthereumChain","_wallet_addEthereumChain","wallet_switchEthereumChain","_wallet_switchEthereumChain","fetch","body","mode","headers","json","parse","error","serializeError","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","addressString","includes","_isKnownAddress","tx","fromAddress","from","selectedAddress","_ensureKnownAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","provider","unauthorized","unsupportedMethod","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","requestEthereumAccounts","_requireAuthorization","_signEthereumMessage","_ethereumAddressFromSignedMessage","_prepareTransactionParams","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","code","chainIdNumber","success","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","setChainCallback"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nconst EthereumChain_1 = require(\"../EthereumChain\");\nconst init_1 = require(\"../init\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        super();\n        // So dapps can easily identify Coinbase Wallet for enabling features like 3085 network switcher menus\n        this.isCoinbaseWallet = true;\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send;\n        this._sendAsync = this.sendAsync;\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this._walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses;\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params\n            });\n        });\n        if (this._addresses.length > 0) {\n            this.initializeRelay();\n        }\n        window.addEventListener('message', (event) => {\n            var _a;\n            if (event.data.type !== 'walletLinkMessage')\n                return;\n            if (event.data.data.action === 'defaultChainChanged') {\n                const chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(chainId), true);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    get isChainOverridden() {\n        return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === 'true';\n    }\n    set isChainOverridden(value) {\n        this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    // @ts-ignore\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n        if (hasChainSwitched && fromRelay)\n            return;\n        if (fromRelay) {\n            this.isChainOverridden = true;\n        }\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        const relay = await this.initializeRelay();\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency).promise;\n        if (typeof res.result === 'boolean') {\n            // legacy handling. to be deprecated in february 2022\n            if (res.result === true) {\n                this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                this.updateProviderInfo(rpcUrls[0], chainId, false);\n            }\n            return res.result === true;\n        }\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(rpcUrls[0], chainId, false);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        var _a;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n        if (typeof res.result !== 'boolean') {\n            const switchResponse = res.result;\n            if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n            }\n        }\n        else {\n            // this is for legacy clients that return a boolean as result. can deprecate below in February 2022\n            if (res.result) {\n                this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                const ethereumChain = EthereumChain_1.EthereumChain.fromChainId(BigInt(chainId));\n                const rpcUrl = (_a = EthereumChain_1.EthereumChain.rpcUrl(ethereumChain)) !== null && _a !== void 0 ? _a : \"\";\n                this.updateProviderInfo(rpcUrl, chainId, false);\n            }\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return this._addresses;\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    close() {\n        this.initializeRelay().then(relay => relay.resetAndReload());\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // WalletLink Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`WalletLink does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n        window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", { detail: this._addresses }));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n                return this._walletlink_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n        }\n        if (!this.jsonRpcUrl)\n            throw Error(\"Error: No jsonRpcUrl provided\");\n        return window\n            .fetch(this.jsonRpcUrl, {\n            method: \"POST\",\n            body: JSON.stringify(request),\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            .then(json => {\n            if (!json) {\n                throw eth_rpc_errors_1.ethErrors.rpc.parse({});\n            }\n            const response = json;\n            const { error } = response;\n            if (error) {\n                throw (0, eth_rpc_errors_1.serializeError)(error);\n            }\n            return response;\n        });\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = (0, util_1.ensureAddressString)(addressString);\n            return this._addresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId\n        };\n    }\n    _requireAuthorization() {\n        if (this._addresses.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return this._addresses;\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _walletlink_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b;\n        const request = (params[0]);\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return { jsonrpc: '2.0', id: 0, error: { code: 2, message: `please pass in at least 1 rpcUrl` } };\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], request.blockExplorerUrls, request.chainName, request.iconUrls, request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: '2.0', id: 0, result: null };\n        }\n        else {\n            return { jsonrpc: '2.0', id: 0, error: { code: 2, message: `unable to add ethereum chain` } };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = (params[0]);\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback((accounts) => this._setAddresses(accounts));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.WalletLinkProvider = WalletLinkProvider;\n"]},"metadata":{},"sourceType":"script"}